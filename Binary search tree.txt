#include <stdio.h>
#include <stdlib.h>

struct Node
{
    int data;
    struct Node *left, *right;
};

struct Node *root = NULL;

struct Node *insert(struct Node *root, int ele)
{
    if (root == NULL)
    {
        struct Node *newNode = (struct Node *)malloc(sizeof(struct Node));
        newNode->data = ele;
        newNode->left = NULL;
        newNode->right = NULL;
        return newNode;
    }
    else if (ele > root->data)
    {
        root->right = insert(root->right, ele);
    }
    else if (ele < root->data)
    {
        root->left = insert(root->left, ele);
    }

    return root;
}

void inorder(struct Node *root)
{
    if (root != NULL)
    {
        inorder(root->left);
        printf("%d\t", root->data);
        inorder(root->right);
    }
}

void preorder(struct Node *root)
{
    if (root != NULL)
    {
        printf("%d\t", root->data);
        preorder(root->left);
        preorder(root->right);
    }
}

void postorder(struct Node *root)
{
    if (root != NULL)
    {
        postorder(root->left);
        postorder(root->right);
        printf("%d\t", root->data);
    }
}

int main()
{
    int cho, val;
    do
    {
        printf("\nMain Menu");
        printf("\n1. Insert");
        printf("\n2. Inorder Traversal");
        printf("\n3. Preorder Traversal");
        printf("\n4. Postorder Traversal");
        printf("\n5. Exit");
        printf("\nEnter your choice: ");
        scanf("%d", &cho);

        switch (cho)
        {
        case 1:
            printf("Enter the value: ");
            scanf("%d", &val);
            root = insert(root, val);
            break;
        case 2:
            inorder(root);
            printf("\n");
            break;
        case 3:
            preorder(root);
            printf("\n");
            break;
        case 4:
            postorder(root);
            printf("\n");
            break;
        case 5:
            exit(0);
            break;
        default:
            printf("Enter a choice between 1 to 5\n");
        }
    } while (cho >= 1 && cho <= 5);

    return 0;
}
